{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","getMessage","firstPartOfGoods","slice","length","join","restOfGoods","selectGoods","good","includes","splice","indexOf","push","setState","prevState","className","this","map","goodSelected","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,WAAa,WACX,IAAQD,EAAkB,EAAKD,MAAvBC,cACFE,EAAmBF,EAAcG,MAAM,EAAGH,EAAcI,OAAS,GAAGC,KAAK,MACzEC,EAAcN,EAAcA,EAAcI,OAAS,GAEzD,OAAQJ,EAAcI,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUJ,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUE,EAAV,gBAAkCI,EAAlC,mB,EAINC,YAAc,SAACC,GACb,IAAQR,EAAkB,EAAKD,MAAvBC,cAEJA,EAAcS,SAASD,GACzBR,EAAcU,OAAOV,EAAcW,QAAQH,GAAO,GAElDR,EAAcY,KAAKJ,GAGrB,EAAKK,UAAS,SAAAC,GAAS,MAAK,CAAEd,cAAec,EAAUd,mB,4CAGzD,WAAU,IAAD,OACP,OACE,qBAAKe,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,8DAGA,4BACGC,KAAKf,kBAGV,qBAAKc,UAAU,WAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,wBACEA,UAAU,mDADZ,UAQE,gCACE,qBAAIA,UAAU,UAAd,UACE,yCACA,6CACA,4CAIJ,gCACGlB,EAAgBoB,KAAI,SAACT,GACpB,IAAMU,EAAe,EAAKnB,MAAMC,cAAcS,SAASD,GAEvD,OAEE,qBAAeO,UAAWG,EAAe,UAAY,GAArD,UACE,6BACGV,IAEH,6BACE,wBACEW,KAAK,SACLJ,UAAWK,IACT,MACA,CACE,cAAeF,EACf,eAAgBA,IAGpBG,QAAS,WACP,EAAKd,YAAYC,IAVrB,SAaG,EAAKT,MAAMC,cAAcS,SAASD,GAAQ,SAAW,UAG1D,6BACG,EAAKT,MAAMC,cAAcS,SAASD,GAC/B,mCACA,qDAxBA,6B,GAtEZc,IAAMC,WA6GTzB,IC/Hf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.db35ff76.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  getMessage = () => {\n    const { selectedGoods } = this.state;\n    const firstPartOfGoods = selectedGoods.slice(0, selectedGoods.length - 1).join(', ');\n    const restOfGoods = selectedGoods[selectedGoods.length - 1];\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${firstPartOfGoods} and ${restOfGoods} are selected`;\n    }\n  };\n\n  selectGoods = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(good)) {\n      selectedGoods.splice(selectedGoods.indexOf(good), 1);\n    } else {\n      selectedGoods.push(good);\n    }\n\n    this.setState(prevState => ({ selectedGoods: prevState.selectedGoods }));\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <h1>\n              The goods you have selected:\n            </h1>\n            <p>\n              {this.getMessage()}\n            </p>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"table-responsive\">\n              <table\n                className=\"\n                  table\n                  table-striped\n                  table-hover\n                  table-bordered\n                \"\n              >\n                <thead>\n                  <tr className=\"bg-info\">\n                    <th>Grosery</th>\n                    <th>Add to cart</th>\n                    <th>Added</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {goodsFromServer.map((good) => {\n                    const goodSelected = this.state.selectedGoods.includes(good);\n\n                    return (\n\n                      <tr key=\"good\" className={goodSelected ? 'bg-info' : ''}>\n                        <th>\n                          {good}\n                        </th>\n                        <th>\n                          <button\n                            type=\"button\"\n                            className={classNames(\n                              'btn',\n                              {\n                                'btn-warning': goodSelected,\n                                'btn-success': !goodSelected,\n                              },\n                            )}\n                            onClick={() => {\n                              this.selectGoods(good);\n                            }}\n                          >\n                            {this.state.selectedGoods.includes(good) ? 'Remove' : 'Add'}\n                          </button>\n                        </th>\n                        <th>\n                          {this.state.selectedGoods.includes(good)\n                            ? 'This item was added to your cart'\n                            : 'Press add button to add this item to your cart'}\n                        </th>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}