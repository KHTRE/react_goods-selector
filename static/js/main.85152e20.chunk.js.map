{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","getMessage","message","length","slice","getButton","good","type","onClick","selector","includes","splice","indexOf","push","setState","prevState","this","map","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,aACA,UACA,QACA,aACA,SACA,SACA,QACA,SACA,OACA,WAOIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,WAAa,WACX,IAAIC,EAAU,GAEd,OAAQ,EAAKH,MAAMC,cAAcG,QAC/B,KAAK,EACHD,EAAU,oBACV,MAEF,KAAK,EACHA,EAAO,UAAM,EAAKH,MAAMC,cAAc,GAA/B,gBACP,MAEF,KAAK,EACHE,EAAO,UAAM,EAAKH,MAAMC,cAAc,GAA/B,gBAAyC,EAAKD,MAAMC,cAAc,GAAlE,iBACP,MAEF,QACEE,EAAO,UAAM,EAAKH,MAAMC,cAAcI,MAAM,EAAG,EAAKL,MAAMC,cAAcG,OAAS,GAA1E,gBAAoF,EAAKJ,MAAMC,cAAc,EAAKD,MAAMC,cAAcG,OAAS,GAA/I,iBAIX,OAAOD,G,EAGTG,UAAY,SAACC,GACX,OACE,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKC,SAASH,IAHlB,SAMG,EAAKP,MAAMC,cAAcU,SAASJ,GAAQ,SAAW,S,EAK5DG,SAAW,SAACH,GACV,IAAQN,EAAkB,EAAKD,MAAvBC,cAEJA,EAAcU,SAASJ,GACzBN,EAAcW,OAAOX,EAAcY,QAAQN,GAAO,GAElDN,EAAca,KAAKP,GAGrB,EAAKQ,UAAS,SAAAC,GAAS,MAAK,CAAEf,cAAee,EAAUf,mB,4CAGzD,WAAU,IAAD,OACP,OACE,gCACE,6BACGgB,KAAKf,eAER,6BACGJ,EAAgBoB,KAAI,SAACX,GACpB,OACE,qBAAeY,UAAW,EAAKnB,MAAMC,cAAcU,SAASJ,GAAQ,QAAU,GAA9E,UACGA,EACA,EAAKD,UAAUC,KAFTA,e,GA/DLa,IAAMC,WA2ETtB,IC5FfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.85152e20.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  ' Dumplings',\n  ' Carrot',\n  ' Eggs',\n  ' Ice cream',\n  ' Apple',\n  ' Bread',\n  ' Fish',\n  ' Honey',\n  ' Jam',\n  ' Garlic',\n];\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  getMessage = () => {\n    let message = '';\n\n    switch (this.state.selectedGoods.length) {\n      case 0:\n        message = 'No goods selected';\n        break;\n\n      case 1:\n        message = `${this.state.selectedGoods[0]} is selected`;\n        break;\n\n      case 2:\n        message = `${this.state.selectedGoods[0]} and ${this.state.selectedGoods[1]} are selected`;\n        break;\n\n      default:\n        message = `${this.state.selectedGoods.slice(0, this.state.selectedGoods.length - 1)} and ${this.state.selectedGoods[this.state.selectedGoods.length - 1]} are selected`;\n        break;\n    }\n\n    return message;\n  };\n\n  getButton = (good: string) => {\n    return (\n      <button\n        type=\"button\"\n        onClick={() => {\n          this.selector(good);\n        }}\n      >\n        {this.state.selectedGoods.includes(good) ? 'Remove' : 'Add'}\n      </button>\n    );\n  };\n\n  selector = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(good)) {\n      selectedGoods.splice(selectedGoods.indexOf(good), 1);\n    } else {\n      selectedGoods.push(good);\n    }\n\n    this.setState(prevState => ({ selectedGoods: prevState.selectedGoods }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>\n          {this.getMessage()}\n        </h1>\n        <ul>\n          {goodsFromServer.map((good) => {\n            return (\n              <li key={good} className={this.state.selectedGoods.includes(good) ? 'added' : ''}>\n                {good}\n                {this.getButton(good)}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}